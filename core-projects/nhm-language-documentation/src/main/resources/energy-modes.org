#+BEGIN_COMMENT
See changelog.org and the big comment at the end of this file.
#+END_COMMENT
* Energy Calculator Modes

The NHM energy calculator can operate in several different /modes/.
Changing the calculator mode affects man of the input assumptions the energy calculator uses.

The energy calculator mode can be set for the whole scenario using the =energy-calculator:= argument to the =ref.scenario= command.
It can be changed for a particular calculation using =ref.under= or with the =ref.counterfactual.energy-calculator= command.

Here is a summary of what assumptions are used in each mode. The *Physical parameters* below cover u-values and glazing parameters (frame factor, light transmission and so on).

** BREDEM2012 Mode

- Physical parameters :: Initial values are taken from the stock. The values in the stock are in turn determined by the ~imputation-schema.xlsx~ file which is included in the stock zip file.

     If your scenario puts in insulation measures the u-values resulting will be determined by what you have written on the measure. Any measure you write must be told a resistance or a u-value. These scenario parameters will update or replace the u-values on the relevant fabric in the house.

     Similarly, glazing measures may change the glazing-specific parameters.
- Lighting coefficients :: Lighting energy use is determined using the following coefficients for different types of lighting:

     | Lighting     | Times SAP Incandescent |
     |--------------+------------------------|
     | Incandescent |                      1 |
     | CFL          |                    0.5 |
     | Halogen      |                    0.5 |
     | LED          |                    0.5 |
     | LV-Halogen   |                    0.5 |
     | A++          |                    0.5 |

     This corresponds to the SAP and BREDEM lighting equation, and includes an embedded assumption that 1/3 of all lights are always incandescent (rolled into the CFL coefficient).

- Solar panel :: Solar PV panel own-use proportion is defined by the scenario.
- Calibration rules :: Calibration rules (=ref.context.calibration=) are used if they are given in the scenario.
- Occupancy :: The occupancy recorded in the stock is used.
- Cooking coefficients :: BREDEM 2012 cooking coefficients are used. These differ a bit from SAP 2012 coefficients.
- Appliance coefficients :: BREDEM 2012 appliance demand coefficients are used. These are slightly lower than SAP 2012 coefficients.
- Heating parameters :: Scenario heating parameters are used, with model defaults if none are specified. The model defaults are:

  - 19 degrees living area demand temperature (following the Cambridge Household Model, by DECC's preference).
  - rest of dwelling temperature difference of 3 degrees (again per CHM).
  - Heating on from October to May.
  - Heating on from 7:00-8:00 and 18:00-23:00 on weekdays and 7:00-23:00 on weekends.
- Weather :: Scenario weather is used, with the model default of SAP 2012 regionally averaged weather if nothing is given. Latitude for solar radiation calculations is taken from the dwelling's region's representative latitude.
- Carbon factors :: Scenario carbon factors are used, or zero if nothing is specified.
- Fuel prices :: Scenario tariffs are used, or zero if nothing is specified.
- Reduced internal gains :: Reduced internal gains are allowed, but off by default.

** SAP2012 Mode

- Physical parameters :: Values are always looked up from a set of hard-coded internal tables. These tables reflect changes in the insulation and glazing status of the building, so using insulation measures will typically change u-values, but the measures' u-value and resistance parameters are ignored (only the thickness or glazing type matter).

- Lighting coefficients :: Lighting energy use is determined using the following coefficients for different types of lighting:

     | Lighting     | Times SAP Incandescent |
     |--------------+------------------------|
     | Incandescent |                      1 |
     | CFL          |                    0.5 |
     | Halogen      |                    0.5 |
     | LED          |                    0.5 |
     | LV-Halogen   |                    0.5 |
     | A++          |                    0.5 |

     This corresponds to the SAP and BREDEM lighting equation, and includes an embedded assumption that 1/3 of all lights are always incandescent (rolled into the CFL coefficient).

- Solar panel :: Solar PV panel own-use proportion is defined by SAP as 1/5.
- Calibration rules :: Calibration rules (=ref.context.calibration=) are disabled in all cases.
- Occupancy :: SAP standard occupancy is used in all cases.
- Cooking coefficients :: SAP 2012 cooking coefficients are used.
- Appliance coefficients :: SAP 2012 appliance coefficients are used.
- Heating parameters :: SAP 2012 heating schedule and demand temperature are used.
- Weather :: SAP 2012 regional average weather and regional average latitude are used.
- Carbon factors :: Scenario carbon factors are used, or zero if nothing is specified.
- Fuel prices :: Scenario tariffs are used, or zero if nothing is specified.
- Reduced internal gains :: Reduced internal gains are disabled; if used they will have no effect.

** SAP2012_UVALUES Mode

Per ~BREDEM2012~ mode, except physical parameters per ~SAP2012~ mode.
This allows you to write a scenario in which most things are flexible but using SAP u-values for convenience.

** BEIS Mode

Per ~BREDEM2012~ mode, except with changes to lighting, appliances and cooking:

- Lighting coefficients :: Lighting energy use is determined using the following coefficients for different types of lighting:

     | Lighting     | Times SAP Incandescent |
     |--------------+------------------------|
     | Incandescent |                      1 |
     | CFL          |                  0.166 |
     | Halogen      |                  0.714 |
     | LED          |                  0.166 |
     | LV-Halogen   |                   0.43 |
     | A++          |                  0.076 |

     These values have been determined by BEIS as part of products policy work.

- Cooking and appliances :: Cooking and appliance energy use can be adjusted using =ref.measure.set-adjustment-terms= and =ref.measure.add-adjustment=. These commands will have no effect on calculations outside BEIS mode.

     In BEIS mode they allow the energy use and internal gains for appliances and cookers to be adjusted after the fact.
#+BEGIN_COMMENT
This tells emacs to run pandoc on save. This comment needs to be near the end of the file, as emacs only looks for buffer specific variables near the end.

The command which gets run is this:

(shell-command "pandoc -f org -t docbook changelog.org --chapters | sed 's! id=\"\"!!g' | sed 's!<chapter>!<chapter xmlns=\"http://docbook.org/ns/docbook\">!g' | sed 's!<literal>\\(ref\\..\\+\\)</literal>!<xref linkend=\"\\1\"/>!g'")

It has some escapes in it because it is a lisp string getting passed to the shell.

Written out and unescaped it is

pandoc -f org -t docbook changelog.org --chapters |                        convert this file to docbook with pandoc
    sed 's!id=""!!g' |                                                     remove id="" from the thing - pandoc makes this and it upsets maven docbook
    sed 's!<chapter.*>!<chapter xmlns="http://docbook.org/ns/docbook">!g' |  add the docbook namespace to the top-level chapter - pandoc does not put this in
    sed 's!<literal>\(ref\..\+\)</literal>!<xref linkend="\1\/>!g'         finally, fix cross-references written in the org-mode source

To explain about cross-references:

- we need to refer to stuff in the other docbook xml from this file
- the IDs of those things are not known to org mode or to pandoc
- both org and pandoc fail if you refer to an unknown thing, so
- we use a hack; in this file, to refer to one of the other things in the docbook
  we write =ref.the-thing=; this is converted into <literal>ref.the-thing</literal>
  in docbook, which we then regex to <xref linkend="ref.the-thing" /> which happens
  to be a legal cross ref if we got it right.

In the local variables line below we have eval:, which is a special local variable that runs some emacs lisp.
The lisp we are running adds the lisp above onto the after-save-hook, which is a list of functions to call after saving.

Local Variables:
eval: (add-hook 'after-save-hook (lambda () (shell-command "pandoc -f org -t docbook energy-modes.org --chapters | sed 's! id=\"\"!!g' | sed 's!<chapter.*>!<chapter xmlns=\"http://docbook.org/ns/docbook\">!g' | sed 's!<literal>\\(ref\\..\\+\\)</literal>!<xref linkend=\"\\1\"/>!g' > energy-modes.xml")) nil t)
End:
#+END_COMMENT
