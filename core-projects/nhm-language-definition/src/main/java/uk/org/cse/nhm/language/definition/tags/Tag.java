package uk.org.cse.nhm.language.definition.tags;

import java.util.List;
import java.util.Set;
import java.util.regex.Pattern;

import com.google.common.base.Optional;
import com.google.common.collect.ImmutableSet;

import uk.org.cse.nhm.language.definition.Doc;

@Doc(
        {
            "Tags and flags are used to categorise and identify things in the simulation.",
            "Flags are named boolean variables which can be put on a house, and tags are names",
            "which can be associated with transactions for reporting purposes.",
            "Each tag has a name, which consists of digits, lower or uppercase letters, hyphens.",
            "They may also start with a colon:",
            " for example <code>my-tag-1</code>, and <code>:loan</code> are both legal flags or tags.",
            "Tags or flags generated by parts of the system automatically tend to be wrapped in stars."
        })
public class Tag {

    private static final Pattern VALID = Pattern.compile(":?[-/0-9a-zA-Z]+");
    private final String tag;

    Tag(final String s_) {
        this.tag = s_;
    }

    public static Optional<Tag> of(final String s) {
        final String s_ = s.trim().toLowerCase();
        if (VALID.matcher(s_).matches()) {
            return Optional.of(new Tag(s_));
        } else {
            return Optional.absent();
        }
    }

    public String getTag() {
        return tag;
    }

    @Override
    public String toString() {
        return tag;
    }

    public static Set<String> asSet(final List<Tag> tags) {
        final ImmutableSet.Builder<String> result = ImmutableSet.builder();

        for (final Tag t : tags) {
            result.add(t.getTag());
        }

        return result.build();
    }
}
